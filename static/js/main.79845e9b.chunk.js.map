{"version":3,"sources":["App.js","index.js"],"names":["App","setSelectedItem","id","key","temp","JSON","parse","stringify","state","forEach","item","selected","selectedDate","findSelectedDate","setState","fetchLotteryData","lotteryDates","title","oddsData","error","isLoading","dates","find","el","split","reverse","join","data","convertedOddsData","rank","rankNumber","parseInt","slice","push","tier","match","winners","amount","prize","this","fetch","then","response","ok","json","Error","convertOddsData","last","odds","catch","headerData","message","length","dataThead","className","list","onSelecting","renderContent","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sSAiJeA,G,8DAzIb,aAAe,IAAD,8BACZ,gBA0EFC,gBAAkB,SAACC,EAAIC,GAAS,IAAD,EACzBC,EAAOC,KAAKC,MAAMD,KAAKE,UAAU,EAAKC,MAAML,KAChDC,EAAKK,SAAQ,SAAAC,GAAI,OAAKA,EAAKC,UAAW,KACtCP,EAAKF,GAAIS,UAAW,EACpB,IAAMC,EAAe,EAAKC,iBAAiBT,GAC3C,EAAKU,UAAL,mBAEKX,EAAMC,GAFX,6BAGkBQ,GAHlB,GAKE,EAAKG,mBAnFP,EAAKP,MAAQ,CACXI,aAAc,KACdI,aAAc,CACZ,CACEd,GAAI,EACJe,MAAO,aACPN,UAAU,EACVR,IAAK,gBAEP,CACED,GAAI,EACJe,MAAO,aACPN,UAAU,EACVR,IAAK,gBAEP,CACED,GAAI,EACJe,MAAO,aACPN,UAAU,EACVR,IAAK,gBAEP,CACED,GAAI,EACJe,MAAO,aACPN,UAAU,EACVR,IAAK,iBAGTe,SAAU,GACVC,MAAO,KACPC,WAAW,GAhCD,E,6DAoCGC,GAEf,OADqBA,EAAMC,MAAK,SAAAC,GAAE,OAAoB,IAAhBA,EAAGZ,YACrBM,MAAMO,MAAM,KAAKC,UAAUC,KAAK,M,sCAGtCC,GACd,IAAMT,EAAWS,EACbC,EAAoB,GACxB,IAAK,IAAMC,KAAQX,EAAU,CAC3B,IAAMY,EAAaC,SAASF,EAAKG,MAAM,IACnCF,GACFF,EAAkBK,KAAK,CACrBC,KAAMJ,EACNK,MAAO,EACPC,QAASlB,EAASW,GAAMO,QACxBC,OAAQnB,EAASW,GAAMS,QAI7B,OAAOV,I,yCAGW,IAAD,OACjBW,KAAKzB,SAAS,CAAEM,WAAW,IAC3BoB,MAAM,GAAD,OA/DO,uDA+DP,OAAcD,KAAK/B,MAAMI,eAC3B6B,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAM,+BAGnBJ,MAAK,SAAAd,GACJ,IAAMC,EAAoB,EAAKkB,gBAAgBnB,EAAKoB,KAAK,GAAGC,MAC5D,EAAKlC,SAAS,CAAEI,SAAUU,EAAmBR,WAAW,OAEzD6B,OAAM,SAAA9B,GAAK,OAAI,EAAKL,SAAS,CAAEK,QAAOC,WAAW,S,oCAiBxC8B,GAAa,IAAD,EACeX,KAAK/B,MAApCU,EADgB,EAChBA,SAAUE,EADM,EACNA,UAAWD,EADL,EACKA,MAE7B,OAAIA,EACK,2BAAIA,EAAMgC,SAGf/B,EACK,0CAELF,EAASkC,OAAS,EACb,kBAAC,IAAD,CAAOzB,KAAMT,EAAUmC,UAAWH,SAD3C,I,+BAMA,IAeQlC,EAAiBuB,KAAK/B,MAAtBQ,aAER,OACE,yBAAKsC,UAAU,OACb,8CACA,yDACA,kBAAC,IAAD,CACErC,MAAM,sBACNsC,KAAMvC,EACNwC,YAAajB,KAAKtC,kBAEnBsC,KAAKkB,cA1BS,CACjB,CACExC,MAAO,QAET,CACEA,MAAO,SAET,CACEA,MAAO,WAET,CACEA,MAAO,iB,GArHGyC,cCFlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.79845e9b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Dropdown, Table } from 'presnyakova-lib';\nimport 'presnyakova-lib/dist/index.css';\nimport './App.css';\n\nconst API_URL = 'https://www.lottoland.com/api/drawings/euroJackpot/';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      selectedDate: null,\n      lotteryDates: [\n        {\n          id: 0,\n          title: '04-09-2020',\n          selected: false,\n          key: 'lotteryDates',\n        },\n        {\n          id: 1,\n          title: '11-09-2020',\n          selected: false,\n          key: 'lotteryDates',\n        },\n        {\n          id: 2,\n          title: '18-09-2020',\n          selected: false,\n          key: 'lotteryDates',\n        },\n        {\n          id: 3,\n          title: '25-09-2020',\n          selected: false,\n          key: 'lotteryDates',\n        },\n      ],\n      oddsData: [],\n      error: null,\n      isLoading: false,\n    };\n  }\n\n  findSelectedDate(dates) {\n    const selectedItem = dates.find(el => el.selected === true);\n    return selectedItem.title.split('-').reverse().join('');\n  }\n\n  convertOddsData(data) {\n    const oddsData = data;\n    let convertedOddsData = [];\n    for (const rank in oddsData) {\n      const rankNumber = parseInt(rank.slice(4));\n      if (rankNumber) {\n        convertedOddsData.push({\n          tier: rankNumber,\n          match: 0,\n          winners: oddsData[rank].winners,\n          amount: oddsData[rank].prize,\n        });\n      }\n    }\n    return convertedOddsData;\n  }\n\n  fetchLotteryData() {\n    this.setState({ isLoading: true });\n    fetch(`${API_URL}${this.state.selectedDate}`)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error('Something went wrong ...');\n        }\n      })\n      .then(data => {\n        const convertedOddsData = this.convertOddsData(data.last[0].odds);\n        this.setState({ oddsData: convertedOddsData, isLoading: false });\n      })\n      .catch(error => this.setState({ error, isLoading: false }));\n  }\n\n  setSelectedItem = (id, key) => {\n    let temp = JSON.parse(JSON.stringify(this.state[key]));\n    temp.forEach(item => (item.selected = false));\n    temp[id].selected = true;\n    const selectedDate = this.findSelectedDate(temp);\n    this.setState(\n      {\n        [key]: temp,\n        selectedDate: selectedDate,\n      },\n      this.fetchLotteryData\n    );\n  };\n\n  renderContent(headerData) {\n    const { oddsData, isLoading, error } = this.state;\n\n    if (error) {\n      return <p>{error.message}</p>;\n    }\n\n    if (isLoading) {\n      return <p>Loading ...</p>;\n    }\n    if (oddsData.length > 0) {\n      return <Table data={oddsData} dataThead={headerData} />;\n    }\n  }\n\n  render() {\n    const headerData = [\n      {\n        title: 'Tier',\n      },\n      {\n        title: 'Match',\n      },\n      {\n        title: 'Winners',\n      },\n      {\n        title: 'Amount',\n      },\n    ];\n\n    const { lotteryDates } = this.state;\n\n    return (\n      <div className='App'>\n        <h1>Hello, world! </h1>\n        <p>Let's know the gamble data</p>\n        <Dropdown\n          title='Select lottery date'\n          list={lotteryDates}\n          onSelecting={this.setSelectedItem}\n        />\n        {this.renderContent(headerData)}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}